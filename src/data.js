export const infoBlocks = [
    {
        title: 'Компоненты.',
        description:
            'React строится вокруг компонентов — переиспользуемых блоков, которые можно комбинировать для создания интерфейсов. Они бывают классовыми или функциональными.',
    },
    {
        title: 'JSX.',
        description:
            'JSX — это синтаксис, который позволяет писать HTML-подобный код в JavaScript, упрощая создание интерфейсов.',
    },
    {
        title: 'Управление состоянием.',
        description:
            'React управляет состоянием через хуки, такие как useState и useReducer, которые позволяют компонентам реагировать на действия пользователя.',
    },
    {
        title: 'Виртуальный DOM.',
        description:
            'Виртуальный DOM позволяет React обновлять интерфейс эффективно, сначала изменяя виртуальную копию, а затем реальный DOM.',
    },
    {
        title: 'Хуки.',
        description:
            'Хуки — это функции, которые позволяют использовать возможности React, такие как состояние и жизненные циклы, в функциональных компонентах. Примеры: useEffect, useContext, useMemo.',
    },
    {
        title: 'Переиспользование логики.',
        description:
            'React облегчает переиспользование логики между компонентами с помощью хуков и высокоуровневых компонентов, что делает код более модульным.',
    },
    {
        title: 'Совместимость с библиотеками.',
        description:
            'React интегрируется с другими библиотеками и фреймворками, например, Redux для управления состоянием и React Router для роутинга.',
    },
];

export const reactPrinciples = {
    dataFlow:
        'В React данные передаются вниз по иерархии компонентов, а события передаются вверх. Это упрощает отслеживание изменений и отладку приложений.',
    declarative:
        'React позволяет описывать интерфейсы декларативно, указывая, как они должны выглядеть в зависимости от состояния, а не как их нужно обновлять.',
    virtualDOM:
        'React использует механизм виртуального DOM для минимизации операций с реальным DOM, что ускоряет обновление интерфейса и делает его более отзывчивым.',
    rendering:
        'Компоненты React рендерятся в зависимости от их состояния и свойств, что позволяет легко управлять отображением и обновлением части интерфейса.',
};
